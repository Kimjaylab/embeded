#include <fcntl.h>            // 파일 열기 모드(O_WRONLY 등)를 위한 헤더
#include <sys/stat.h>         // 파일 상태 정보 및 FIFO 관련 함수(mkfifo 등)를 위한 헤더
#include <unistd.h>           // POSIX API 사용을 위한 헤더 (read, write, open, close 등)
#include <stdio.h>            
#include <stdlib.h>           // 표준 라이브러리 함수 사용을 위한 헤더 (exit 등)

#define MSG_SIZE 80           // 메시지 최대 크기 정의
#define PIPENAME "./named_pipe_file"  // named pipe 경로 상수 정의

int main(void)
{
    char msg[MSG_SIZE];       // 보낼 메시지를 저장할 버퍼
    int fd;                   // 파이프 파일 디스크립터
    int nread, i;             // write 결과 및 반복 변수

    // named pipe 열기, Write 전용으로 열기
    if ((fd = open(PIPENAME, O_WRONLY)) < 0)   // 쓰기 전용으로 파이프 열기
    {
        printf("fail to open named pipe\n");   // 열기 실패 시 메시지 출력
        return 0;                              // 프로그램 종료
    }

    // Data를 보낸다
    for (i = 0; i < 3; i++)                    // 3번 반복하여 메시지 전송
    {
        snprintf(msg, sizeof(msg), "Send Message[%i]", i);  // 메시지 생성
        if ((nread = write(fd, msg, sizeof(msg))) < 0)      // 메시지 전송
        {
            printf("fail to call write()\n");  // 쓰기 실패 시 메시지 출력
            return 0;                          // 프로그램 종료
        }
    }

    return 0;                                  // 정상 종료
}
